name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install pytest-cov

      - name: Set environment variables
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> $GITHUB_ENV
          echo "AUTH_SERVICE_NAME=${{ secrets.AUTH_SERVICE_NAME }}" >> $GITHUB_ENV
          echo "USER_SERVICE_NAME=${{ secrets.USER_SERVICE_NAME }}" >> $GITHUB_ENV
          echo "FILE_SERVICE_NAME=${{ secrets.FILE_SERVICE_NAME }}" >> $GITHUB_ENV
          echo "DATA_SERVICE_NAME=${{ secrets.DATA_SERVICE_NAME }}" >> $GITHUB_ENV
          echo "TERM_SERVICE_NAME=${{ secrets.TERM_SERVICE_NAME }}" >> $GITHUB_ENV
          echo "SERVICE_DOMAIN=${{ secrets.SERVICE_DOMAIN }}" >> $GITHUB_ENV

      - name: Run tests and generate coverage report
        run: |
          source venv/bin/activate
          pytest --asyncio-mode=auto --cov=main --cov-report=xml:coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=coverage.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage.xml
